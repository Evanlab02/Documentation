{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DockerLens","text":"<p>DockerLens is a tool for managing and monitoring Docker containers on your Docker host. It\u2019s designed for those who rely on Docker or Docker Compose to run home lab projects and want a streamlined interface to oversee container performance and system usage.</p> <p>With DockerLens, you will be able to:</p> <ul> <li>View Containers: See all running containers and monitor their resource usage.</li> <li>Manage Images: Browse and organize Docker images on your host.</li> <li>Get System Overviews: Access high-level insights into Docker\u2019s overall resource usage.</li> </ul> <p>NOTE: Still under development, so some of these features are still to be implemented.</p>"},{"location":"#stack","title":"Stack","text":"<p>This project leverages a range of technologies across both client and server sides for robust and flexible functionality:</p>"},{"location":"#containerization","title":"Containerization","text":"<ul> <li>Docker</li> <li>Docker Compose</li> </ul>"},{"location":"#backend","title":"Backend","text":"<ul> <li>PHP</li> </ul>"},{"location":"#frontend","title":"Frontend","text":"<ul> <li>Server-Side Rendering<ul> <li>PHP</li> <li>CSS</li> <li>Vanilla JavaScript</li> </ul> </li> <li>Client-Side Development<ul> <li>TypeScript</li> <li>React</li> <li>Sass</li> <li>Vite</li> </ul> </li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<ol> <li>Clone the repository</li> <li>Set up Docker and Docker Compose on your machine if you haven\u2019t already.</li> <li>Run Docker Compose to start DockerLens: <code>docker compose up -d</code></li> <li>Open your browser and navigate to <code>http://localhost:80</code> to start managing your containers with DockerLens.</li> <li>Open your browser and navigate to <code>http://localhost:80/docs</code> to view the documentation for DockerLens.</li> </ol>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please open an issue or submit a pull request.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License. See the LICENSE file for details.</p>"},{"location":"ROADMAP/","title":"Roadmap","text":"<p>Below you can find the outline of the projects roadmap.</p>"},{"location":"ROADMAP/#v010","title":"V0.1.0","text":"<p>Milestone to track progress on this: V.0.1.0</p> <ul> <li>Repository Cleanup</li> <li>Overview page wireframes</li> <li>Documentation on initial implementation</li> <li>Initial test suite</li> <li>General Pipelines</li> <li>Release Pipelines</li> <li>More modular twig templates</li> <li>Include all containers</li> <li>Update container table to format states</li> <li>Cards for different states</li> </ul>"},{"location":"ROADMAP/#v020","title":"V0.2.0","text":"<ul> <li>Split pages where necessary. (Not started)</li> <li>Container detail page V1. (Not started)<ul> <li>State card. (Not started)</li> <li>Restart count card. (Not started)</li> <li>Number of mounts. (Not started)</li> </ul> </li> </ul>"},{"location":"ROADMAP/#v030","title":"V0.3.0","text":"<ul> <li>Container resources endpoint. (Not started)</li> <li>Container resources CPU card. (Not started)</li> <li>Container resources Memory card. (Not started)</li> <li>Container resources CPU chart. (Not started)</li> <li>Container resources Memory chart. (Not started)</li> </ul>"},{"location":"ROADMAP/#v100","title":"V1.0.0","text":"<ul> <li>TBC, Docker system, overview page.</li> </ul>"},{"location":"ROADMAP/#v200","title":"V2.0.0","text":"<ul> <li>TBC, this will be the first release containing work surrounding docker images.</li> </ul>"},{"location":"ROADMAP/#vague-future-details","title":"Vague future details","text":"<ul> <li>Docker images, overview and detail pages.</li> <li>Docker system, overview page.</li> </ul>"},{"location":"dev/","title":"Getting Started","text":"<p>DockerLens currently relies on docker for the local dev environment.</p> <p>You can start locally running instances using the following command:</p> <pre><code>docker compose watch\n# OR\nmake dev\n</code></pre> <p>This will enable the watch directives which will sync changes from the code into the containers, this removes the need to rebuild and restart the containers for every change.</p>"},{"location":"dev/#running-without-watch","title":"Running without watch","text":"<p>You can also run it without the watch directives using the following commands:</p> <pre><code>docker compose up -d # To run it detached.\ndocker compose up # Attach to containers to view their logs as they are running.\n</code></pre> <p>To manually rebuild the images, you can run the following command:</p> <pre><code>docker compose build\n# OR\nmake build\n</code></pre>"},{"location":"project/","title":"Planning - V1","text":"<p>The project will should allow users to do the following things in the V1 release:</p>"},{"location":"project/#container-list-page","title":"Container list page","text":"<ul> <li>View all containers on device<ul> <li>Cards indicating number of containers with a certain state.</li> <li>Table with all containers information.</li> </ul> </li> </ul>"},{"location":"project/#container-detail-page","title":"Container detail page","text":"<ul> <li>Container Detail Page<ul> <li>State card.</li> <li>Restart count card.</li> <li>Number of mounts.</li> <li>Container resources CPU card.</li> <li>Container resources Memory card.</li> <li>Container resources CPU chart. </li> <li>Container resources Memory chart.</li> </ul> </li> </ul>"},{"location":"project/#system-overview-page","title":"System overview page","text":"<p>TBC</p>"}]}