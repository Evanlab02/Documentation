{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home Portal","text":"<p>NOTE: Home portal is still in early development. Please keep an eye here for updates as this documentation is still very much under construction.</p> <p>Home portal is a collection of tools, services and applications. Using docker it integrates all the services and applications in a single place and with the help of caddy (reverse proxy) we can access all the services and applications using a single domain.</p> <p>It is still very early in development so please keep an eye here for all updates.</p> <p>You can also view the documentation here.</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>Home portal is a hobby project, and is only maintained by myself. Therefore it is highly recommended that you do not use this within a production environment. If you decide to use this in a production environment, please do so at your own risk. While I strive to keep this project up to date and secure, I can not guarantee that.</p>"},{"location":"#getting-started","title":"Getting started","text":"<p>To get started with home portal, you will need to have the following installed on your machine:</p> <ul> <li>Docker</li> <li>Docker Compose</li> </ul> <p>Once you have these installed, you can follow the steps below to get home portal installed on your machine:</p> <p>NOTE: Currently we are busy refactoring the codebase and the documentation. Please keep an eye here for the new updates.</p>"},{"location":"#method-1-zip-file","title":"Method 1: Zip File","text":"<ol> <li>Download the zip file (HomePortal.zip) from the latest release here. </li> <li>Extract the zip file to a location on your machine.</li> <li>Open a terminal and navigate to the extracted folder.</li> </ol> <p>Once you have done this, follow the steps at this link to get it running: Getting Started</p>"},{"location":"apps/development/","title":"Development Apps","text":"<p>These are apps that are useful for developers of home portal or the home portal component libraries.</p> <p>The following apps are included in this category:</p> <ul> <li>Home Portal Component Library Storybook</li> <li>API Coverage Report</li> </ul> <p>These apps are available for <code>v0.1.0</code> and above.</p> <p>If you would like to have these apps included, follow the below steps:</p>"},{"location":"apps/development/#1-shut-down-the-home-portal","title":"1. Shut down the home portal","text":"<p>You will need to shut down the home portal to install these apps. To do this, run the following command:</p> <pre><code>docker-compose down\n</code></pre>"},{"location":"apps/development/#2-update-the-caddyfile","title":"2. Update the caddyfile","text":"<p>You will need to update the <code>Caddyfile</code> to include the new apps. Add the following snippet to the <code>Caddyfile</code> close to the already existing rules:</p> <pre><code>handle_path /dev/coverage/api/* {\n    root * /var/www/html/coverage/hp/api/\n    file_server\n}\n\nhandle_path /components/* {\n    root * /var/www/html/components/\n    file_server\n}\n</code></pre> <p>These static files are already available on the home portal image, so the above snippet will serve them.</p>"},{"location":"apps/development/#3-start-home-portal","title":"3. Start home portal","text":"<p>Now that you have updated the <code>Caddyfile</code>, you can start the home portal again by running the following command:</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"apps/development/#4-run-the-script-for-the-apps-to-be-registered","title":"4. Run the script for the apps to be registered","text":"<p>You can run the script using the following command:</p> <pre><code>./scripts/development.sh\n</code></pre> <p>This script will create rows for the new apps so that they are available on the home portal landing page.</p>"},{"location":"apps/development/#additional-information","title":"Additional Information","text":"<p>You can access the applications records by visting the home portal admin page.</p> <p>The name of these applications are:</p> <ul> <li>Home Portal Storybook</li> <li>Coverage Report - API</li> </ul> <p>There is also a category that gets created called alongside these apps called <code>Development</code>.</p>"},{"location":"apps/plex/","title":"Plex Media Server","text":"<p>This is a relatively simple guide to setting up Plex Media Server on your home portal. This guide assumes you have already setup your home portal and have a working instance of Plex Media Server running on your network.</p>"},{"location":"apps/plex/#0-install-the-media-category","title":"0. Install the media category","text":"<p>There are a few apps that fall under the media category. To install the media category, run the following command:</p> <p>NOTE: You should only run this command if you have not already installed the media category.</p> <pre><code>./scripts/media.sh\n</code></pre>"},{"location":"apps/plex/#1-integrate-plex-with-the-home-portal","title":"1. Integrate plex with the home portal","text":"<p>To integrate Plex with the home portal, you will need to run the following script:</p> <pre><code>./scripts/plex.sh\n</code></pre> <p>And that is it, the script will ask for your link to plex and setup a redirect to it via the home portal.</p>"},{"location":"apps/prowlarr/","title":"Prowlarr","text":"<p>This is a relatively simple guide to setting up Prowlarr on your home portal. This guide assumes you have already setup your home portal and have a working instance of Prowlarr running on your network.</p>"},{"location":"apps/prowlarr/#0-install-the-media-category","title":"0. Install the media category","text":"<p>There are a few apps that fall under the media category. To install the media category, run the following command:</p> <p>NOTE: You should only run this command if you have not already installed the media category.</p> <pre><code>./scripts/media.sh\n</code></pre>"},{"location":"apps/prowlarr/#1-integrate-prowlarr-with-the-home-portal","title":"1. Integrate prowlarr with the home portal","text":"<p>To integrate prowlarr with the home portal, you will need to run the following script:</p> <pre><code>./scripts/prowlarr.sh\n</code></pre> <p>And that is it, the script will ask for your link to prowlarr and setup a redirect to it via the home portal.</p>"},{"location":"apps/radarr/","title":"Radarr","text":"<p>This is a relatively simple guide to setting up Radarr on your home portal. This guide assumes you have already setup your home portal and have a working instance of Radarr running on your network.</p>"},{"location":"apps/radarr/#0-install-the-media-category","title":"0. Install the media category","text":"<p>There are a few apps that fall under the media category. To install the media category, run the following command:</p> <p>NOTE: You should only run this command if you have not already installed the media category.</p> <pre><code>./scripts/media.sh\n</code></pre>"},{"location":"apps/radarr/#1-integrate-radarr-with-the-home-portal","title":"1. Integrate Radarr with the home portal","text":"<p>To integrate Radarr with the home portal, you will need to run the following script:</p> <pre><code>./scripts/radarr.sh\n</code></pre> <p>And that is it, the script will ask for your link to radarr and setup a redirect to it via the home portal.</p>"},{"location":"apps/shopping-app/","title":"Shopping App","text":"<p>This is a shopping app that allows users to manage their shopping lists within their household via the home portal. Please feel free to check out the repository here.</p> <p>NOTE: This app is only available for <code>v0.1.0</code> and above. NOTE: This app can not run on the default port of the home portal and will require another port to be used. (Port 9999)</p> <p>Follow the below steps to get it set up:</p>"},{"location":"apps/shopping-app/#1-update-your-env-file","title":"1. Update your .env file","text":"<p>You will need to update your <code>.env</code> file to include the following:</p> <pre><code># SHOPPING APP CONFIG\nSHOPPING_DJANGO_KEY=&lt;somethinglongerthan50charactersthatcontainsatleast1number&gt;\nSHOPPING_DJANGO_HOST=&lt;the_host_you_want_to_use&gt;\nSHOPPING_DATABASE_NAME=shopping-db\nSHOPPING_DATABASE_USER=&lt;your_home_portal_db_user&gt;\nSHOPPING_DATABASE_PASSWORD=&lt;your_home_portal_db_password&gt;\nSHOPPING_DB_HOST=hp-postgres-16\nSHOPPING_DB_PORT=5432\nSHOPPING_DEFAULT_SETTINGS_MODULE=shoppingapp.settings.settings\n</code></pre>"},{"location":"apps/shopping-app/#2-create-the-database","title":"2. Create the database","text":"<p>You will need to use provided pgadmin interface that comes along with the home portal to create the database.</p> <p>NOTE: If you have not already, please check out the PgAdmin guide to setup the connection between PgAdmin and the home portal database.</p> <p>Use your home portal database user for the new database and name the new database: <code>shopping-db</code> (Or if you changed it in the <code>.env</code> file, use that name).</p> <p>NOTE: It is not recommended to change the database name from <code>shopping-db</code>.</p>"},{"location":"apps/shopping-app/#3-shut-down-the-home-portal-and-change-the-compose-file","title":"3. Shut down the home portal and change the compose file","text":"<p>You will need to shut down the home portal and change the <code>compose.yml</code> file to include the shopping app.</p> <p>Find below a snippet of what you need to add:</p> <pre><code>  shopping-django-administration:\n    container_name: shopping-django-admin\n    image: ghcr.io/evanlab02/shoppingappadmin:0.17.0\n    env_file:\n      - .env\n    environment:\n      SHOPPING_DEFAULT_SETTINGS_MODULE: shoppingapp.settings.settings\n    command: /bin/bash -c \"python manage.py migrate &amp;&amp; python manage.py runserver\"\n    depends_on:\n      home-portal-postgres-16:\n        condition: service_healthy\n    networks:\n      - home-portal-network\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'\n          memory: 512M\n\n  shopping-django-app:\n    container_name: shopping-django-app\n    image: ghcr.io/evanlab02/shoppingappbe:0.17.0\n    environment:\n      SHOPPING_DEFAULT_SETTINGS_MODULE: shoppingapp.settings.settings\n    env_file:\n      - .env\n    command: \"gunicorn -b 0.0.0.0:80 -w 1 --log-config shoppingapp/logging.config --capture-output --log-level info --worker-class uvicorn_worker.UvicornWorker 'shoppingapp.config.asgi:app'\"\n    depends_on:\n      home-portal-postgres-16:\n        condition: service_healthy\n    networks:\n      - home-portal-network\n    restart: always\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'\n          memory: 512M\n</code></pre>"},{"location":"apps/shopping-app/#4-update-the-caddyfile","title":"4. Update the caddyfile","text":"<p>Add the following to your caddyfile:</p> <pre><code>:9999 {\n    handle_path /* {\n        reverse_proxy shopping-django-app:80\n    }\n\n    handle_path /apis/shopping/* {\n        reverse_proxy shopping-django-app:80\n    }\n\n    handle_path /static/* {\n        root * /var/www/html/shopping/static/\n        file_server\n    }\n\n    handle_path /shopping/dashboard/* {\n        root * /var/www/html/shopping/site/\n        file_server\n    }\n}\n</code></pre>"},{"location":"apps/shopping-app/#5-start-home-portal-and-setup-the-app","title":"5. Start home portal and setup the app","text":"<p>You will now want to start the home portal again using the following command:</p> <pre><code>docker-compose up -d\n</code></pre> <p>You will then want to run the installation script using the following command:</p> <pre><code>./scripts/shopping.sh\n</code></pre> <p>This will create your super user for the shopping app admin page and install the app onto the home portal database.</p>"},{"location":"apps/shopping-app/#disclaimer","title":"Disclaimer","text":"<p>The install script assumes the Shopping List App is living at <code>http://localhost:9999</code>. If you are using a different port or host, you will need to update this within the home portal admin page for the Shopping List App entry and Shopping List App Admin entry.</p>"},{"location":"apps/sonarr/","title":"Sonarr","text":"<p>This is a relatively simple guide to setting up Sonarr on your home portal. This guide assumes you have already setup your home portal and have a working instance of Sonarr running on your network.</p>"},{"location":"apps/sonarr/#0-install-the-media-category","title":"0. Install the media category","text":"<p>There are a few apps that fall under the media category. To install the media category, run the following command:</p> <p>NOTE: You should only run this command if you have not already installed the media category.</p> <pre><code>./scripts/media.sh\n</code></pre>"},{"location":"apps/sonarr/#1-integrate-sonarr-with-the-home-portal","title":"1. Integrate Sonarr with the home portal","text":"<p>To integrate Sonarr with the home portal, you will need to run the following script:</p> <pre><code>./scripts/sonarr.sh\n</code></pre> <p>And that is it, the script will ask for your link to Sonarr and setup a redirect to it via the home portal.</p>"},{"location":"guides/","title":"Setting up","text":"<p>This guide will take you through setting up home portal on your local machine. </p>"},{"location":"guides/#prerequisites","title":"Prerequisites","text":"<p>To get started with home portal, you will need to have the following installed on your machine:</p> <ul> <li>Docker</li> <li>Docker Compose</li> <li>Home Portal Files</li> </ul>"},{"location":"guides/#1-setup-your-environment","title":"1. Setup your environment","text":"<p>Create a <code>.env</code> file in the root of the home portal directory and add the following environment variables:</p> <pre><code># POSTGRES CONFIG\nPOSTGRES_PASSWORD=&lt;password_of_your_choosing&gt;\nPOSTGRES_DB=home-portal-db\n\n# PGADMIN CONFIG\nPGADMIN_DEFAULT_EMAIL=&lt;email_of_your_choosing&gt;\nPGADMIN_DEFAULT_PASSWORD=&lt;password_of_your_choosing&gt;\n\n# HOME PORTAL CONFIG\nHP_API_DJANGO_KEY=somethinglongerthan50charactersthatcontainsatleast1number\nHP_API_DATABASE_PASSWORD=&lt;password_of_your_choosing&gt;\nHP_API_DB_HOST=hp-postgres-16\n\n# Please note that the admin page will only be available on the primary host.\nHP_API_DJANGO_HOST=&lt;yourhostname&gt; \n\n# Optional, to allow for alternative hosts for the main app/api.\n# HP_API_DJANGO_HOST_ALT=&lt;yourhostname&gt;\n# HP_API_DJANGO_HOST_ALT2=&lt;yourhostname&gt;\n</code></pre>"},{"location":"guides/#2-start-the-servicescontainers","title":"2. Start the services/containers","text":"<p>To start the services/containers, you will need to run the following command:</p> <pre><code>docker-compose up -d\n</code></pre> <p>If you have not named the compose file the standard name, you will need to specify the file name:</p> <pre><code>docker-compose -f &lt;file-name&gt; up -d\n</code></pre>"},{"location":"guides/#3-run-the-install-script","title":"3. Run the install script","text":"<p>The install script does two things:</p> <ol> <li>It creates a super user for the home portal so that you can access the admin panel.</li> <li>It creates the default applications that come with the home portal.</li> </ol> <p>To run the install script, you will need to run the following command:</p> <pre><code>./scripts/install.sh\n</code></pre>"},{"location":"guides/#4-access-the-home-portal","title":"4. Access the home portal","text":"<p>You will now be able to access the home portal by going to the following URL:</p> <pre><code>http://&lt;yourhostname&gt;:80\n</code></pre>"},{"location":"guides/pgadmin/","title":"PgAdmin","text":"<p>You will need to setup up PgAdmin to read from the home portal database. This will allow you to view the data in the database and make changes to it.</p>"},{"location":"guides/pgadmin/#1-access-pgadmin","title":"1. Access PgAdmin","text":"<p>To access PgAdmin, you will need to navigate to the following URL in your browser:</p> <pre><code>http://&lt;your_host_name&gt;/pgadmin/\n</code></pre>"},{"location":"guides/pgadmin/#2-login-to-pgadmin","title":"2. Login to PgAdmin","text":"<p>You will need to login to PgAdmin using the credentials you setup in your .env file.</p>"},{"location":"guides/pgadmin/#3-register-the-home-portal-database","title":"3. Register the Home Portal Database","text":"<p>Right click on servers and select <code>Register --&gt; Server</code>. You will need to fill in the following details:</p> <ul> <li>General --&gt; Name: <code>Home Portal Database</code></li> <li>General --&gt; Ensure <code>Connect Now</code> is checked</li> <li>Connection --&gt; Host name/address: <code>hp-postgres-16</code></li> <li>Connection --&gt; Username: <code>&lt;your_home_portal_db_user&gt;</code></li> <li>Connection --&gt; Password: <code>&lt;your_home_portal_db_password&gt;</code></li> <li>Connection --&gt; Ensure <code>Save password</code> is checked</li> </ul> <p>Click save and you should now be able to view the home portal database.</p>"},{"location":"guides/post-setup/","title":"Post Setup","text":"<p>After you have started home portal, there is nothing more for you to do, however below we will provide you with some information on how you can further customize your home portal.</p>"},{"location":"guides/post-setup/#introduction","title":"Introduction","text":"<p>The home portal is a collection of docker containers that creates a one in all solution for your home management needs. The home portal is built on top of Django and React, and uses PostgreSQL as the database. The home portal is designed to be a self-hosted solution that you can run on your own hardware at home.</p>"},{"location":"guides/post-setup/#customizing-the-home-portal","title":"Customizing the home portal","text":"<p>You can add applications to home portal by following our guides on each application. You can also attempt to add your own application to home portal. If you would like to add your application to the officially supported applications, please reach out to me @ evanlabuschagne70@gmail.com.</p> <p>We will not go into detail on how to add applications to home portal here but we will discuss the different parts of this process.</p>"},{"location":"guides/post-setup/#compose-files","title":"Compose files","text":"<p>The home portal is built on top of docker and uses docker-compose to manage the containers. You can add your own applications to the home portal by adding a new service to the <code>docker-compose.yml</code> file. </p> <p>There is not much here to detail except that you should make sure that when you add your service to the <code>docker-compose.yml</code> file, you should ensure it matches what we detail in our guides.</p>"},{"location":"guides/post-setup/#caddyfile","title":"Caddyfile","text":"<p>The Caddyfile is the configuration file for the Caddy server that is used to serve the home portal static files.</p> <p>This is where you can expose some static files that come with the home portal image to enable different apps. To do so, follow an application setup guide and ensure that you add the necessary configuration to the Caddyfile as detailed in the guide.</p> <p>NOTE: You could also add your own static files by creating your own custom image on top of the home portal image. Please note this is not fully recommended as it could break the home portal or override some of the home portal static files however it is possible to do so. This will also require you to update the compose file to match your custom image. In future we will have a guide for this.</p>"},{"location":"guides/post-setup/#admin-panel-and-application-settings","title":"Admin panel and application settings","text":"<p>The home portal comes with an admin panel that you can use to manage the applications that are installed on the home portal. You can access the admin panel by going to <code>http://localhost:8000/admin/</code> and logging in with the superuser credentials you created during the setup process.</p> <p>Please note that there are application settings that you can change in the admin panel, that allow you to change the link that the application is served on, the name of the application in the interface, icon and more. This should not be changed often as this will most of the time require you to change several configurations in the Caddyfile and the compose file.</p> <p>You might be wondering, why provide this functionality if it so complex? The reason this exists is some applications we integrate into the home portal do not rely on the fact that it is running as part of the compose stack so it could be hosted anywhere or change where it is hosted and you should have the ability to change the link that the application is served on.</p> <p>This also allows for easy integration into things you might already be running on your network. Please refer to the application guides to see if it is recommended to change the application settings, this will definitely be needed in some cases and those guides will be the best place to find that information.</p>"},{"location":"guides/post-setup/#environment-variables","title":"Environment variables","text":"<p>We use <code>.env</code> files to manage the environment variables that are used in the home portal. You can add your own environment variables to the <code>.env</code> file to customize the home portal.</p> <p>Please note that these .env files are often crucial to the home portal. Please ensure to closely follow the application guides when adding environment variables to the <code>.env</code> file to ensure your apps work correctly.</p>"},{"location":"update/update0-2-0/","title":"Update Guide for 0.2.0","text":""},{"location":"update/update0-2-0/#introduction","title":"Introduction","text":"<p>This guide is intended to help you update your project from version 0.1.0 to 0.2.0. It will guide you through the changes that need to be made in order to update your project.</p>"},{"location":"update/update0-2-0/#update-steps","title":"Update Steps","text":"<p>This is simple update, you will need to update all your tags in your compose file to the new version (v0.2.0) along with one other thing.</p> <p>We now expose another port on caddy, so you will need to update your caddy service to expose the new port.</p> <pre><code>  home-portal-site:\n    container_name: hp-site\n    image: ghcr.io/evanlab02/hp-site:v0.2.0\n    env_file:\n      - .env\n    restart: always\n    expose:\n      - 80\n      - 9999\n    ports:\n      - \"80:80\"\n      - \"9999:9999\"\n    networks:\n      - home-portal-network\n    volumes:\n      - ./site/Caddyfile:/etc/caddy/Caddyfile\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'\n          memory: 512M\n</code></pre> <p>If you want the exact snippet to copy paste, here it is:</p> <pre><code>    expose:\n      - 80\n      - 9999\n    ports:\n      - \"80:80\"\n      - \"9999:9999\"\n</code></pre>"},{"location":"update/update0-3-2/","title":"Update Guide for 0.3.2","text":""},{"location":"update/update0-3-2/#introduction","title":"Introduction","text":"<p>This guide is intended to help you update your project from version 0.2.0 to 0.3.2. It will guide you through the changes that need to be made in order to update your project.</p>"},{"location":"update/update0-3-2/#get-ready-for-a-new-look-and-feel-of-documentation","title":"Get ready for a new look and feel of documentation","text":"<p>We have updated the way the docs look and feel, this should not be too much of an adjustment, but worthwhile to put here.</p>"},{"location":"update/update0-3-2/#upgrading-images-to-032","title":"Upgrading images to 0.3.2","text":"<p>The most simple step is to upgrade all the home portal images to <code>v0.3.2</code>.</p> <pre><code>  home-portal-admin:\n    container_name: hp-admin\n    image: ghcr.io/evanlab02/hp-admin:v0.3.2\n    env_file:\n      - .env\n    depends_on:\n      home-portal-postgres-16:\n        condition: service_healthy\n    restart: always\n    networks:\n      - home-portal-network\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'\n          memory: 512M\n    command: \"/bin/bash -c 'python manage.py migrate &amp;&amp; uvicorn hub.admin.asgi:application --host 0.0.0.0 --port 80 --workers 1'\"\n\n  home-portal-api:\n    container_name: hp-api\n    image: ghcr.io/evanlab02/hp-api:v0.3.2\n    env_file:\n      - .env\n    depends_on:\n      home-portal-postgres-16:\n        condition: service_healthy\n    restart: always\n    networks:\n      - home-portal-network\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'\n          memory: 512M\n\n  home-portal-site:\n    container_name: hp-site\n    image: ghcr.io/evanlab02/hp-site:v0.3.2\n    env_file:\n      - .env\n    restart: always\n    expose:\n      - 80\n      - 9999\n    ports:\n      - \"80:80\"\n      - \"9999:9999\"\n    networks:\n      - home-portal-network\n    volumes:\n      - ./site/Caddyfile:/etc/caddy/Caddyfile\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'\n          memory: 512M\n</code></pre>"},{"location":"update/update0-3-2/#update-shopping-list-app-to-0170-if-you-are-using-it","title":"Update Shopping List App to 0.17.0 if you are using it","text":"<p>Now officially support and recommend version <code>0.17.0</code> of the Shopping List App. Please review the changelog for the Shopping List App on its repository.</p> <p>NOTE: You should also review the changelog for all versions between <code>0.16.2</code> and <code>0.17.0</code>. These are mostly behind the scene improvements, that are easy to start using with this upgrade.</p> <pre><code>  shopping-django-administration:\n    container_name: shopping-django-admin\n    image: ghcr.io/evanlab02/shoppingappadmin:0.17.0\n    env_file:\n      - .env\n    environment:\n      SHOPPING_DEFAULT_SETTINGS_MODULE: shoppingapp.settings.settings\n    command: /bin/bash -c \"python manage.py migrate &amp;&amp; python manage.py runserver\"\n    depends_on:\n      home-portal-postgres-16:\n        condition: service_healthy\n    networks:\n      - home-portal-network\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'\n          memory: 512M\n\n  shopping-django-app:\n    container_name: shopping-django-app\n    image: ghcr.io/evanlab02/shoppingappbe:0.17.0\n    environment:\n      SHOPPING_DEFAULT_SETTINGS_MODULE: shoppingapp.settings.settings\n    env_file:\n      - .env\n    command: \"gunicorn -b 0.0.0.0:80 -w 1 --log-config shoppingapp/logging.config --capture-output --log-level info --worker-class uvicorn_worker.UvicornWorker 'shoppingapp.config.asgi:app'\"\n    depends_on:\n      home-portal-postgres-16:\n        condition: service_healthy\n    networks:\n      - home-portal-network\n    restart: always\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'\n          memory: 512M\n</code></pre>"}]}